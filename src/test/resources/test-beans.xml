<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:jdbc="http://www.springframework.org/schema/jdbc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
           http://www.springframework.org/schema/jdbc
           http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd">

    <!-- ********************************************************************************************** -->
    <!-- Configuration of Datasource and Spring Session and Transaction Management                      -->
    <!-- ********************************************************************************************** -->

    <!-- This datasource is for usage with the hsqldb database in EMBEDDED mode.
    	 http://static.springsource.org/spring/docs/current/reference/jdbc.html#jdbc-embedded-database-support
         This strategy has the advantage of testing with a clean database for each test.-->
    <jdbc:embedded-database id="HsqldbDataSource" type="HSQL">
		<jdbc:script location="data/studentdb.script"/>
	</jdbc:embedded-database>

    <!-- This Transaction Manager is needed for SQL Transactions: it uses a SQL Datasource (see above) -->
    <bean id="TransactionManager"
        class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="HsqldbDataSource" />
    </bean>

    <!-- ********************************************************************************************** -->
    <!-- Configuration of Data Access Objects and injection of session and transaction manager          -->
    <!-- ********************************************************************************************** -->
    <!-- Complete Bean Lifecycle Management here: including initialisation and destroying -->
    <bean id="StudentDAO"
        class="at.ac.tuwien.sepm.dao.JdbcStudentDAO"
        scope="singleton" init-method="init" destroy-method="destroy">
        <!-- This is the datasource needed for JDBC Database Access -->
        <property name="dataSource" ref="HsqldbDataSource" />
        <!-- This is the transaction manager needed for SQL Transactions -->
        <property name="transactionManager" ref="TransactionManager" />
        <!-- The next properties are SQL Commands used in this DAO -->
        <property name="sql_selectAllStudents">
            <value>
                SELECT id, matnr, firstname, lastname, email
                FROM student
            </value>
        </property>
        <property name="sql_selectStudent">
            <value>
                SELECT id, matnr, firstname, lastname, email 
                FROM student WHERE id=?
            </value>
        </property>
        <property name="sql_insertStudent">
            <value>
                INSERT INTO student (matnr, firstname, lastname, email)
                VALUES (?, ?, ?, ?)
            </value>
        </property>
        <property name="sql_updateStudent">
            <value>
                UPDATE student SET matnr=?, firstname=?, lastname=?,
                email=? WHERE id=?
            </value>
        </property>
        <property name="sql_deleteStudent">
            <value>DELETE FROM student WHERE id=?</value>
        </property>
        <property name="sql_getInsertId">
            <value>CALL IDENTITY()</value>
        </property>
    </bean>



    <!-- ********************************************************************************************** -->
    <!-- Import, Export                                                                                 -->
    <!-- ********************************************************************************************** -->

    <bean id="Import" 
        class="at.ac.tuwien.sepm.export_import.XmlExportImport">
    </bean>

    <bean id="Export"
        class="at.ac.tuwien.sepm.export_import.XmlExportImport">
        <property name="encoding" value="utf-8" />
    </bean>

    <bean id="HtmlExport"
        class="at.ac.tuwien.sepm.export_import.HtmlExport">
        <property name="title" value="Export of Student-Data" />
    </bean>

    <!-- 
        This bean is responsible for rendering all available Export Filters in the Swing GUI.
        Hence it is implementing the ComboBoxModel Interface.
        All Export Classes should be added to the exportFilter list
    -->
    <bean id="ExportComboModel"
        class="at.ac.tuwien.sepm.gui.ExportMenuModel"
        init-method="init">
        <!--  Register the actually available Export Filters: classes implementing the Export Interface -->
        <property name="exportFilter">
            <list>
                <ref local="Export" />
                <ref local="HtmlExport" />
            </list>
        </property>
    </bean>


    <!-- ********************************************************************************************** -->
    <!-- Model Beans Testdata                                                                           -->
    <!-- ********************************************************************************************** -->


    <bean id="StudentAlexanderSchatten"
        class="at.ac.tuwien.sepm.domain.Student">
        <property name="id" value="1" />
        <property name="matnr" value="8925164" />
        <property name="firstname" value="Alexander" />
        <property name="lastname" value="Schatten" />
        <property name="email" value="alexander@schatten.info" />
    </bean>

    <bean id="StudentHubertMeixner"
        class="at.ac.tuwien.sepm.domain.Student">
        <property name="id" value="2" />
        <property name="matnr" value="87654321" />
        <property name="firstname" value="Hubert" />
        <property name="lastname" value="Meixner" />
        <property name="email" value="hubert@meixner.test" />
    </bean>

    <!-- Student for testing add - update - delete -->
    <bean id="StudentAddUpdateDelete"
        class="at.ac.tuwien.sepm.domain.Student">
        <description>
            A Student for testing the ADD, UPDATE and DELETE method
        </description>
        <property name="id" value="432" />
        <property name="matnr" value="0926759" />
        <property name="firstname" value="Test" />
        <property name="lastname" value="Student" />
        <property name="email"
            value="test.student@qse.ifs.tuwien.ac.at" />
    </bean>
    
</beans>
